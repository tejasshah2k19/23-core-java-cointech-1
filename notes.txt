java -> programming lang. 


program -> system 

English 


instructions -> 
		read two numbers
		add two numbers into ans 
		print ans 

system -> execute -> output 



user --> english { HL } 
system -> binary { LL } 

transaltor -> 
		1)	compiler
		2)	interpreter 


HL -> transaltor -> LL 

1
2
3
*4
5
6
*7


2 errors 
c -> whole at once 
i -> line by line 

speed -> c 
eff -> i 

--> compiler , interpreter 

lang -> C : compiler
	C++ : compiler 
	java : compiler + interpreter  
--------------------------------------------------------------------------------
								java 

	JDK												JRE 
	java development kit							java runtime enviornment 

	JDK : JRE 								JRE
										JVM,JIT,lib,classloader
	javac : java compiler 
	java  : execute java file 
	appletviewer : 
	javadoc : 

 
	
	tools ?
	text editor -> save -> run 
	
	ide : eclipse , ij , jb 
 
-------------------------------------------------------------------------------------

java --> oop 
        open source , HL , compiled - interpreterted , OOP lang. 

.java  

type-> OOP -> object oriented programming lang { real world }
            class, object , inheritance , encapsulation ,abstraction 

       POP -> procedure 

venue , food , cake , decoration 


-------------------------------------------------------------------------------------
class -> general , logical , group -> 

object -> physical , member , specialized { real word entity }


function -> method -> 
   
   add(){ 
    read two numbers   
    add two number 
    print ans
   }


Iphone - c 
Laptop - c 
iphone14plus256gbblack - o 
Person  -  c c 
Mr X -  o o 
Water - c c 
Keyboard - c c 
Bank - c c 
Amazon - c c
Car - c c   
Ferrari - c c 


Bank -> customer -> wid , dep , chkbal 


Car -> class 
Iphone -> class 
Iphone 14 Pro -> class 
My Iphone 14 pro -> object 
Human -> C 
Anuhya -> Object 
Laptop -> class
Bank -> class 

Mouse -> class 
Girl -> class 
Computer -> class 
Lemon -> class 

Door -> class 
Glass -> class 
Projector -> 


Dog -> class
Cat -> class 
Ipad -> class 
HeadPhone -> class 
Gandhiji -> object 


class-> {variable , method }



Bank -> customer -> wid , dep , chkbal 

Bank -> class 
                accountNo
                firstName
                balance

                dep()
                wid()
                chkBal() 

-------------------------------------------------------------------------------------------------
HL 
LL

type : OOP POP 

transaltor -> compiler , interpreter 

java -> c + i 
java -> HL
java -> oop 

Mr Bean  -> object 
Water -> class 
Bridge -> class 
TajMahal -> object 

-------------------------------------------------------------------------------------------------


class -> logic -> 1) method()
				  2) variable  { data name - store value }

object -> access - use - property 

if you want to access any property of the class 
you need to create object of a class 

Dog - leg hand tail -  walk() - run() - bite()


Men - leg hand beard -  walk() jump() run() clap() 


Mr x : Men  ->
object : class 
-------------------------------------------------------------------------------------------

once you compile your java file you will get class file 

do we have more than one class in one java file ? yes 
we can have n numbers of class in one java file 


javac First.java =>  .class  { First.class Second.class Third.class }

do we have multiple main method in multiple class? Yes 

-------------------------------------------------------------------------------------------
class - first letter should be capital 
		two words -> first letter of second word also be capital 

		Dog 
		Employee 
		TempEmployee 

data type -> type of data -> 
	1) primitive:8  

		byte	1byte  8   2^8 -> 256 -> -128 0 127 
		short 	2byte  16
		char    2byte       it can store single character in single quote  'p'  invalid->'px'  
		int 	4byte  32	whole numbers 1,23, 45  -> non fraction digit -> integer 
		long    8    		same as int but double in the size 
		float 	4 			real number fraction digit 2.5 6.33 65.25 3.0   
		double 	8 			same as float double in the size 
		boolean 1bit  		true false 
		
	2) non-primitive ->
		class , enum , array .... 
		 First.class  


variable -> mention data type ->  memory allocation 


---------------------------------

1. For Vada(20)
2. For Dosa(50)
3. For Panipuri(40) 

Enter choice
3 

How many ? 
2

bill = 80 RS 
----------------------------
loops -> iterative | 
for 
while 
do..while 

while(condition){

    //body 
}

int i=1;//start 

while(i<=10){ //condition
    S.o.p(i);
    i++;//increment 
}
------------------------------------------------------------------
local : method 
instance : object , YOU CAN ACCESS VIA INSTANCE 
static   : class , you can access via className or instance/object   
                    {we have access static variable using class name }
								
	s1	name	ram					
		age	12				bankCode	5001
								
	s2	name	null				s1.bankCode	4001
		age	0				s1.bankCode = 5001	
							s2.bankCode	5001


Bill 
Amount : 1000 
GST    : 180 
Total  : 1180 

-------------------------------------------------------------------
Bank app 
    customer -> name , balance{50000} 

    1. Wid 
    2. Dep 
    3. CheckBalance
    4. Exit 

    1.wid 
    amt: 5000 

    2.dep 
    amt : 50000

    3.CheckBalance
    balance : 95000

    4. exit 
--------------------------------------------------------------    
minimum bal : 5000 
max wid and dep : wid:50000 , dep 1,00,000
--------------------------------------------------------------    


casting -> implicit , explicit 

int a = 5;
int b = 2;
float c = a/b;// c int/int => int => 2  {implicit casting } 




int a = 5;
int b = 2;
float c = ((float)a)/b;// c float/int => float => 2.5  {explicit casting } 
--------------------------------------------------------------

// 1 java source file can have n number of class
// but we must have 1 public class
// core java -> main method that is the entry point-->execution start
// when we compile java file it will generate class file
// we will n number of class file from 1 java file [ n is the count of the class
// in java file]
// we can run those class file using java command
// java Employee -> main
// java PartTimeEmployee


Name   BasicSalary   HRA    PF    Salary  Tax 
x		10000		 1000   1200  9800     0
y        XXX 
z        XXX

----------------------------------------------------------------------
identifiers:-  what data name , name 
				name , email,password , Salary , pf , hra

Keywords :-  reserve words - buitin - specific meaning 
			int float class break continue ..... 
			float int; 
			float x; 
			int x; 
			int break; 

java code conventions:- 
		class  ->  Bank , PartEmp ,  Employee ,  FullTimeEmployee  

		variable -> salary , totalSalary, max , min , minBal  
		constant variable -> ROI , MAX_SALARY , BILL 

		methods  ->  add(),  addEmp();   

Rules for identifiers :- 
		1) we can use only , a-z A-Z 0-9 _ $ 
		2) first character must not be a digit 
				max9->correct  9max->incorrect 
		3) we can not use space , or any special symbols , [ _ $ ]	
		4) we can not take Keywords 
		5) upper case and lower case are different - case sensitive
--------------------------------------------------------------------------------------
constructor 
			-> constructor is a special method which has a same name as a class name and			
				it must not have any return type 

			-> is used to initialize instance variable  
			1) implicit 
			2) explicit 

			we have two types of constructor	
				1) default constructor / no argument 
				2) argument / parameterized constructor
--------------------------------------------------------------------------------------

create a class call Marker , 
having three methods 
1) max 
2) oddeven 
3) redyellow 

max method takes two argument and return max of two 
oddeven method take 1 argument and return true if argument is odd 
								  return false if argument is even 
redyellow method take 1 argument 
			it print red if argument is true 
			it print yellow if argument is false 


in main method 
	obj.redyellow(obj.oddeven(obj.max(11,23))); 
	
-----------------------------------------------------------------
class -> 
variable ->
method ->  
object -> 
object -> call methods -> access methods 




create a class Employee 
				name : String 
				salary : int 

				1) getData()  -> read data 
				2) printData() -> print data 
-------------------------------------------------------------------
we have to create car rental app ,that calculates 
total car rent based on user's input 

app will store user's email and password when user signup 
after signup user can select car type , app will charge based on car type 

app provide 3 variant 
1) SUV  - 25RS Per KM 
2) SEDAN - 15RS Per KM 
3) CompactSEDAN - 10RS per KM 

after signup app provide three option for car variant 
user need to select any 1 and then app will ask for kilometers 
based on kilometers and car variant we need to generate bill amount. 
also if bill is more than 5000 than we need to add 10% service charge. 
bill : 5000 
serviceCharge : 500 


bill : 19000
serviceCharge : 1900 


Email  Password  CarVariant kilometers Bill serviceCharge TotlaBill 

{class object method instance variable localvariable Scanner}
------------------------------------------------------------------------

what is constructor ? 
	constructor is a special method ,which has same name as a class name and 
	it must not have any return type 


constructor -> is used to initialize instance variable 


how to create ? 
just create a method without return type and give name same as class name 

do we need to invoke? call?
no -
it will call automatically when we create instance/object 

1) implicit constructor -- java 
2) explicit constructor -- user / developer / we 


explicit constructor -> 
		1)   ( )  -> default constructor / no argument constructor
		2)   (int) -> argument / parameterized constructor 

------------------------------------------------
loop -> repeat 

	1) for 
	2) while 

	for(start;condition;inc/dec ){
		//logic 
	}

	start; 
	while(condition){

		//inc dec 
	}
-------------------------------------------------------------------------
expense manager app -> 

we want to track our total expense in 3 category for a month 
1) grocery  {7000}
2) transport {0}
3) entertainment {16000} 


start 

1 time we ask user , 
			firstName 
			mobile

WELCOME TO EXPENSE MANAGER 

1) add new expense 
2) view all expenses 
3) Exit 
Enter your choice 
1 
Press 1 for grocery 
Press 2 for transport
Press 3 for  entertainment 
1
How much ? 
2000 


WELCOME TO EXPENSE MANAGER 

1) add new expense 
2) view all expenses 
3) Exit 
Enter your choice
1
Press 1 for grocery 
Press 2 for transport
Press 3 for  entertainment 
1
How much?
5000


WELCOME TO EXPENSE MANAGER 

1) add new expense 
2) view all expenses 
3) Exit 
Enter your choice
1
Press 1 for grocery 
Press 2 for transport
Press 3 for  entertainment 
3
How much?
16000



WELCOME TO EXPENSE MANAGER 

1) add new expense 
2) view all expenses 
3) Exit 
Enter your choice
2

grocery : 7000
transport : 0 
entertainment : 16000



WELCOME TO EXPENSE MANAGER 

1) add new expense 
2) view all expenses 
3) Exit 
Enter your choice
3

Thank You! 
Bye 

{class,object,instance variable,constructor,if..,menu,loop,methods,Scanner}
-------------------------------------------------------------------------

array :- 

addition of 10 numbers 

	int a,b,c,d,e,f,.....; 

addition of 50 numbers 



array -> collection of data 
		 collection of same type of data 
		 under the single name we can store n numbers of data 
		 int -> all data of int type 
		 [ ] -> array 

		 int a; // single value 
		 a = 10; 
		 System.out.println(a); // print 10 
		 a = 100; 
		 System.out.println(a); // print 100 


		 int a[] ; // blank array no size 
		 int a[] = new int[5]; // a -> can store 5 value 

		you will get 5 copy of a , 
		a[0]  a[1]  a[2]  a[3] a[4]

		we can access array data using index , 
		which starts from 0 
		which ends at size-1 

		int a[][] = new int[3][3]; // 


		int a[] => 1 dimensional array 
		int a[][] => 2 dimensional array 
		int a[][][] => multi dimensional array 


2d 

		a[0]	a[3]				
							
	index	0	1	2	3	4	5
		10	20	30	40	50	60
							
							
		size = 6					
							
							
			matrix	3*4	3 row 	4 columns	
		0	1	2	3		
	0	10	20	30	40		
	1	50	60	70	80		
	2	90	100	110	120		
							
							
	two dimension array		matrix 			a[0][1]	
						a[2][2]	


	for(int i=0;i<3;i++){
		for(int j=0;j<4;j++){
			a[i][j] = scr.nextInt(); 
		}
	}

	
	for(int i=0;i<3;i++){
		for(int j=0;j<4;j++){
			System.out.print(a[i][j]+" "); 
		}
		System.out.println("");
	}

// find sum of numbers of 2d
// find max
// search a number in 2d
// take row number from user and print sum of that row only

---------------------------------------------------

java api -> import 

import java.package.className; 
import java.package.subPackage.className ; 

import java.util.Scanner; 
import java.util.regex.Pattern;

-----------------------------------------

amazon -> 
			Customer.java 
				Customer 
				Order 
				Cart 
				Address 
			Product.java 
				Product 
				Category
				SubCategory 
				Brand 
			Payment.java 
				Payment 
				Card 
				UPI
				COD 

create more than 1 class in 1 java file 
create more than 1 java file for 1 application 


Ecom -> 
products 
customer 
order 


coupling -> loose  -> A{access add} -> B{add()} { A is tightly coupled with B }
cohesion -> high  -> class => logic => it self -> 
			Accountant 
				collectFees()
				refund()
				paySalary()
			HR
				decideSalary()
			 
			Student 
				payFees()



---------------------------------------------------------
access modifier -     public protected private default  
non access modifier - static final abstract synchronized 
					  transient volatile native strictfp 




static -> keyword 
1) where we can use? 
		class? No
		method? Yes 
		variable? Yes 

static method vs non static method 
1) non static method must be access via object 
	static method can access via class or object 

2) non static method can access any variable 
	static method can access only static variable 


why ? 
	static -> static variable ? 
				static variable -> one and only one copy in memory 
				static variable creates single copy in a memory for entire life of a program 
				non static variable create individual copy when we create object 



----------------------------------------------

create a class Book with 
	4 fields 
		name 
		price 
		author
		publication 
	create 1 method that scan all data from user 
	create 1 static method that print welcome to user before scanning data from user 



Welcome , {static }
enter name  {non static }
enter price 
enter author 
enter publication 

------------------------------------------
JAVA -> OOP -> class , object , inheritance , abstraction 
polymorphism 

inheritance -> object of one class can access property of another class 
				-> reuse 

using extends we can achieve inheritance 


class -> gives -> Parent - Super - Base   
class -> takes -> Child  - Sub   - Derived 

Parent -> BasicCalc {add mul to SciCalc}
Child  -> SciCalc 


1) Single(level) inheritance 
2) Multilevel inheritance 
3) Mulitple - [interface]
4) hirerchical - tree  
5) hybrid - { combine any of 2 - minimum 2}

-----------------------------------------------------
Multilevel => 

	class Santa 
	class Banta -> Santa  
	Class SantaBanta -> Banta 

	SantaBanta can access property of Santa indirectly 
	SantaBanta can access property of Banta Directly 
	Banta can access property of Santa Directly 

------------------------------------------------------
we can ask parent's property via super keyword 


method overriding -> Parent , Child 
					if child will create method that is already created by parent 
					everything must be same in method 
					Parent-> void add (int a,int b)
					Child -> void add (int x,int y)

why ? 
			security 
			memory 
			optimization 

method overloading -> Single class 
				more than 1 form 
				1 method can be created n times 
				method having same name with different argument 


polymorphism -> compile time and run time 

------------------------------------------------------------------

class Cop 
class Police 

Police is child of Cop 

Cop having 2 property , rank and salary 
Police having 2 property , rank and payScale 

all properties are integer values. 

create 1 method in Cop class that scan rank and salary 
creat 1 method in police class that scan rank and payScale 

now create 1 printData method in police which print all 4 variables 

------------------------------------------------------------------------
final keyword 

where? 
class ? yes  -> no inheritance -> can not create inheritance - can not have child 
variable ? yes -> constant variable - we can't change value 
method ? yes   -> final method can not override by child - it disbale overriding  


int a=10; 
final int a = 10; 

------------------------------------------------------------------------

String class ->

	length()
	equals() : boolean 
	equalsIgnoreCase()
	compareTo(): integer 
	compareToIgnoreCase() 
	toUpperCase()
	toLowerCase() 

	1) take email and password from user and print valid 
	if email is admin@amazon.in and password is amazon2023 
	else print invalid 

	2) take name from the user and validate 
		if total character in name is less than 3 print invalid name 
		if name is valid then convert it into upper case and print name 

-----------------------------------------------------------------------

	charAt 
	indexOf
	lastIndexOf 
	contains 
	substring 
	startsWith 
	endsWith 
	split 

	1) take string from the user and count how many vowels present in a string. 
	2) take email address from user and check entire email format is correct or not.
		valid -> om@gmail.com , shah@gmail.com 
		invalid -> o@gmail.com , shah@yopmail.com 
		{it must contains @gmail.com at end and before it we must have atleast two characters }	

	3) take string from user and find out how many times jony present in a string 
		input = "jony jony yes papa" 
		ans = jony founds 2 time 
		split, array 

	4) take string from user , now extract 10 different substring from it 
			with random size 

		input = "java is an object oriented programming language" ;
		java is 
		an object 
		ect oriented
		guage 
		java i 
		ject ori 
		progra
		programing lang 
		XXX 
		XX 
					 
-------------------------------------------------------------------------
	String class -> java api -> 

	String -> immutable ->

	String x = "india"; 
	x.toUpperCase(); // INDIA  
	System.out.println(x); // india 
	String y = x.toLowerCase(); // india 

	gc -> garbage collector 

	System.gc();// request gc  

	
	StringBuffer 			StringBuilder => mutable  

	reverse()

	all the methods of StringBuffer class are synchronized {1 execution at a time }
	all the methods of StringBuilder class  are non synchronized {parellal execution allowed }

	synchronized -> A B C D -> turn by turn A => B => C => D => 
	non synchronized -> A B C D -> run all at same time | parellal execution 

	facebook.com -> login -> non synchronized 
	sbi.com -> transfer => x -> y -> synchronized 
	sbi.com , atm -> wid => x's wife 
	50000 {-40000 -40000} {-30000}




-----------------------------------------------------------


























































-----------------------------------------------------------------
























































































